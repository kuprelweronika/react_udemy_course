{"ast":null,"code":"var _jsxFileName = \"/Users/weronikaficek/Desktop/PROJEKTY/198/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\"; //mozna tez ustawic ref na inpucie i czytac wartosc tego refa\n//kiedy potrzebujemy\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  //const nameInputRef = useRef(\"\");\n  const [enteredName, setEnteredName] = useState(\"\"); //state dla walidacji\n  //const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  useEffect(() => {\n    if (enteredNameIsValid\n    /*&& enteredAgeIsValid)*/\n    ) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value); //event dla kazdej wpisanej litery\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true); //musimy dac zeby nie wysylalo HTTP requesta\n    //robimy if zeby user nie mogl wrzucic empty form\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName); //to samo ale z uzyciem Ref, to nie jest zbyt dobre\n    //const enteredValue = nameInputRef.current.value;\n    //console.log(enteredValue);\n  }; //resetowanie zawartosci\n\n\n  setEnteredName(\"\");\n  setEnteredNameTouched(false);\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\"; //wyzej jest warunek do zmiany klasy wzgledem tego czy input jest valid czy nie\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // ref={nameInputRef}\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"5vT777S/ZiJ1o4AjyUtAp2KcXt0=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","nameInputIsInvalid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses"],"sources":["/Users/weronikaficek/Desktop/PROJEKTY/198/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n//mozna tez ustawic ref na inpucie i czytac wartosc tego refa\n//kiedy potrzebujemy\n\nconst SimpleInput = (props) => {\n  //const nameInputRef = useRef(\"\");\n  const [enteredName, setEnteredName] = useState(\"\");\n  //state dla walidacji\n  //const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  useEffect(() => {\n    if (enteredNameIsValid /*&& enteredAgeIsValid)*/) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    //event dla kazdej wpisanej litery\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    //musimy dac zeby nie wysylalo HTTP requesta\n\n    //robimy if zeby user nie mogl wrzucic empty form\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    //to samo ale z uzyciem Ref, to nie jest zbyt dobre\n    //const enteredValue = nameInputRef.current.value;\n    //console.log(enteredValue);\n  };\n  //resetowanie zawartosci\n  setEnteredName(\"\");\n  setEnteredNameTouched(false);\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  //wyzej jest warunek do zmiany klasy wzgledem tego czy input jest valid czy nie\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          // ref={nameInputRef}\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;AACA;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CAF6B,CAG7B;EACA;;EACA,MAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAMS,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,OAAuB,EAAlD;EACA,MAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBJ,kBAAlD;EAEAN,SAAS,CAAC,MAAM;IACd,IAAIU;IAAmB;IAAvB,EAAkD;MAChDD,cAAc,CAAC,IAAD,CAAd;IACD,CAFD,MAEO;MACLA,cAAc,CAAC,KAAD,CAAd;IACD;EACF,CANQ,EAMN,CAACC,kBAAD,CANM,CAAT;;EAQA,MAAMG,sBAAsB,GAAIC,KAAD,IAAW;IACxCT,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CADwC,CAExC;EACD,CAHD;;EAKA,MAAMC,oBAAoB,GAAIH,KAAD,IAAW;IACtCP,qBAAqB,CAAC,IAAD,CAArB;EACD,CAFD;;EAIA,MAAMW,qBAAqB,GAAIJ,KAAD,IAAW;IACvCA,KAAK,CAACK,cAAN;IACAZ,qBAAqB,CAAC,IAAD,CAArB,CAFuC,CAGvC;IAEA;;IACA,IAAI,CAACG,kBAAL,EAAyB;MACvB;IACD;;IACDU,OAAO,CAACC,GAAR,CAAYjB,WAAZ,EATuC,CAUvC;IACA;IACA;EACD,CAbD,CA5B6B,CA0C7B;;;EACAC,cAAc,CAAC,EAAD,CAAd;EACAE,qBAAqB,CAAC,KAAD,CAArB;EACA,MAAMe,gBAAgB,GAAGV,kBAAkB,GACvC,sBADuC,GAEvC,cAFJ,CA7C6B,CAgD7B;;EAEA,oBACE;IAAM,QAAQ,EAAEM,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEI,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE;QACA,IAAI,EAAC,MAFP;QAGE,EAAE,EAAC,MAHL;QAIE,QAAQ,EAAET,sBAJZ;QAKE,MAAM,EAAEI,oBALV;QAME,KAAK,EAAEb;MANT;QAAA;QAAA;QAAA;MAAA,QAFF,EAUGQ,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAeE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAvED;;GAAMV,W;;KAAAA,W;AAyEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}